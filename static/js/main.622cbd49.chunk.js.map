{"version":3,"sources":["components/Form/form.js","components/Weather/weather.js","components/Chart/chart.js","components/Error.js","components/Nav/Nav.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onSubmit","this","props","getWeather","className","TextField","id","name","label","variant","placeholder","sx","m","type","Component","Weather","city","country","temperature","humidity","description","onClick","getForecast","Chart","data","labels","datasets","queue","backgroundColor","hoverBackgroundColor","borderColor","hoverBorderColor","temp_max","hum","wind_speed","parseInt","window","screen","height","width","options","maintainAspectRatio","duration","getPresent","Error","error","Nav","class","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Footer","App","state","undefined","loading","forecast","e","a","preventDefault","target","elements","value","fetch","then","setState","json","list","console","log","i","length","dt","date_","dt_txt","split","includes","push","main","wind","shift","temp","weather","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.622cbd49.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n//import Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nclass Form extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t\r\n\t\t\t<form onSubmit = {this.props.getWeather}>\r\n\t\t\t\t<div className=\"form-inline justify-content-center pl-3 pr-3\">\r\n\t\t\t\t<TextField id=\"outlined-basic\" name=\"country\" label=\"country\" variant=\"outlined\" placeholder=\"Country...\" sx={{\r\n        '& > :not(style)': { m: 1 },\r\n      }}/>\r\n\t\t\t\t\r\n\t\t\t\t<TextField id=\"outlined-basic\" name=\"city\" label=\"city\" variant=\"outlined\" placeholder=\"City...\" sx={{\r\n        '& > :not(style)': { m: 1 },\r\n      }}/>\r\n\t\t\t\t{/*<input type=\"text\" name=\"country\" className=\"form-control mr-3 mb-3\" placeholder=\"Country...\"/>\r\n                <input type=\"text\" name=\"city\" className=\"form-control mr-3 mb-3\" placeholder=\"City...\"/>*/}\r\n                                                \r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-dark info mb-3\">Get Weather <i className=\"fas fa-arrow-alt-circle-right ml-1\"></i></button>\r\n\t\t\t\t\t {/* <Button type=\"submit\" variant=\"contained\">Get Weather<i className=\"fas fa-arrow-alt-circle-right ml-1\"></i></Button>\t*/}\r\n\t\t\t\t</div>\t\r\n\t\t\t\t\t\r\n\t\t\t</form>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Form;","import React, { Component } from \"react\";\r\n\r\nclass Weather extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"container pt-2 mt-3 col-lg-8 mx-auto text-center\">\r\n                {this.props.city && this.props.country &&\r\n                    <h4>Present Conditions</h4>\r\n                }\r\n\t\t\t\t<table className=\"table pb-3 mb-2\">\r\n  \r\n\t\t\t\t  <tbody>\r\n\t\t\t\t    {this.props.city && this.props.country &&\r\n                    \r\n\t\t\t\t    <tr>\r\n\t\t\t\t      \r\n\t\t\t\t      <td className=\"text-right mx-auto\"><b>Location:</b></td>\r\n\t\t\t\t      <td className=\"text-left mx-auto\">{ this.props.city}, { this.props.country}</td>\r\n\t\t\t\t      \r\n\t\t\t\t    </tr>\r\n\t\t\t\t    }\r\n\t\t\t\t    \r\n\t\t\t\t    { this.props.temperature && \t\t\t\t\t\t\r\n\t\t\t\t    <tr>\r\n\t\t\t\t      \r\n\t\t\t\t      <td className=\"text-right\"><b>Temperature:</b></td>\r\n\t\t\t\t      <td className=\"text-left\">{ this.props.temperature}&#8451;</td>\r\n\t\t\t\t      \r\n\t\t\t\t    </tr>\r\n\t\t\t\t    }\r\n\r\n\t\t\t\t    { this.props.humidity && \t\t\t\t\t\t\r\n\t\t\t\t    <tr>\r\n\t\t\t\t      \r\n\t\t\t\t      <td className=\"text-right\"><b>Humidity:</b></td>\r\n\t\t\t\t      <td className=\"text-left\">{ this.props.humidity} %</td>\r\n\t\t\t\t      \r\n\t\t\t\t    </tr>\r\n\t\t\t\t    }\t\r\n\r\n\t\t\t\t    { this.props.description && \t\t\t\t\t\t\r\n\t\t\t\t    <tr className=\"mb-5\">\r\n\t\t\t\t      \r\n\t\t\t\t      <td className=\"text-right\"><span className=\"text-bold\">Conditions:</span></td>\r\n\t\t\t\t      <td className=\"text-left\">{ this.props.description}</td>\r\n\t\t\t\t  \r\n\t\t\t\t    </tr>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t    }\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t    {/* { this.props.error && \t\t\t\t\t\t\r\n\t\t\t\t    <tr>\r\n\t\t\t\t      \r\n\t\t\t\t      \r\n\t\t\t\t      <td className=\"text-center\">{ this.props.error}</td>\r\n\t\t\t\t      \r\n\t\t\t\t    </tr>\r\n\t\t\t\t    }\t\t */}\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t    \r\n\t\t\t\t  </tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t{this.props.city && this.props.country &&\r\n                   <div className=\"container text-center\">\r\n                        <button className=\"btn btn-dark\" onClick={this.props.getForecast}>Forecast<i className=\"fas fa-cloud-sun-rain ml-1\"></i></button>\r\n                   </div>\r\n                }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Weather;","import React, { Component } from 'react';\r\nimport {Bar} from 'react-chartjs-2'; \r\n\r\nexport default class Chart extends Component {\r\n    \r\n    render() {\r\n        const data = {\r\n            labels: this.props.labels,\r\n            datasets: [\r\n              {\r\n                queue: 'queue1',\r\n                label: 'Temperature (\\xB0C)',\r\n                // \r\n                backgroundColor: '#FFC1BF',\r\n                hoverBackgroundColor: '#F98783',\r\n                borderColor: '#FB7671',\r\n                hoverBorderColor: '#D73933',\r\n                data: this.props.temp_max\r\n              },\r\n              {\r\n                queue: 'queue2',\r\n                label: 'Humidity (%)',\r\n                backgroundColor: '#AAE4FF',\r\n                hoverBackgroundColor: '#62CDFF',\r\n                borderColor: '#26ADEC',\r\n                hoverBorderColor: '#1E86B6',\r\n                data: this.props.hum  \r\n              },\r\n              {\r\n                queue: 'queue3',\r\n                label: 'Windspeed (m/s)',\r\n                backgroundColor: '#FFFFAE',\r\n                hoverBackgroundColor: '#FFFF6F',\r\n                borderColor: '#D8D831',\r\n                hoverBorderColor: '#D8D831',\r\n                data: this.props.wind_speed \r\n              }\r\n            ]\r\n          } \r\n          let h=parseInt(window.screen.height);\r\n              let w=parseInt(window.screen.width);\r\n              if(w > 1000){\r\n                return (\r\n                  <div>\r\n                      <Bar\r\n                      data={data}\r\n                      width={50}\r\n                      height={18}\r\n                      options={{\r\n                          maintainAspectRatio: true,\r\n                          duration: 2000\r\n                      }}\r\n                      /> \r\n                      <div className=\"text-center\">\r\n                          <button className=\"btn btn-light\" onClick={this.props.getPresent}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\r\n                      </div>    \r\n                  </div>\r\n              )\r\n              }\r\n              else{\r\n                return (\r\n                  <div>\r\n                      <Bar\r\n                      data={data}\r\n                      width={88}\r\n                      height={55}\r\n                      options={{\r\n                          maintainAspectRatio: true,\r\n                          duration: 2000\r\n                      }}\r\n                      /> \r\n                      <div className=\"text-center\">\r\n                          <button className=\"btn btn-light\" onClick={this.props.getPresent}><i className=\"fas fa-angle-left mr-1\"></i>Back</button>\r\n                      </div>    \r\n                  </div>\r\n              )\r\n              }\r\n   \r\n        \r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Error extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <p className=\"lead\">{this.props.error}</p>    \r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"weather-forecast\">Weather Forecast</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    \r\n  </div>\r\n</nav>\r\n  );\r\n};\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"bg-dark text-white pt-2 pb-2\">\r\n            <div className=\"container text-center text-md-center\">\r\n              \r\n                \r\n                  <div className=\"align-items-center\">\r\n                    \r\n                      <p>&copy;\r\n                        <a href=\"https://github.com/MukulKolpe\">\r\n                          <strong className=\"text-white\"> Mukul Kolpe</strong>\r\n                        </a>\r\n                      </p>\r\n                   \r\n                  \r\n                \r\n              </div>\r\n            </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport Form from \"./components/Form/form.js\";\r\nimport Weather from \"./components/Weather/weather.js\";\r\nimport Chart from \"./components/Chart/chart.js\";\r\nimport Error from \"./components/Error\";\r\nimport Nav from \"./components/Nav/Nav.js\";\r\nimport Footer from \"./components/Footer/Footer.js\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    temperature: undefined,\r\n    country: undefined,\r\n    city: undefined,\r\n    humidity: undefined,\r\n    loading: false,\r\n    description: undefined,\r\n    error: undefined,\r\n    labels: [],\r\n    temp_max: [],\r\n    hum: [],\r\n    wind_speed: [],\r\n    forecast: false,\r\n  };\r\n\r\n  getWeather = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const country = e.target.elements.country.value;\r\n    const city = e.target.elements.city.value;\r\n\r\n    const data = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=7df7ab233532d23def84f33a98feb94a&units=metric`\r\n    )\r\n      .then(\r\n        this.setState({\r\n          loading: true,\r\n        })\r\n      )\r\n      .then((data) => {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        return data.json();\r\n      });\r\n\r\n    //const data = await api_call.json();\r\n\r\n    if (country && city) {\r\n      if (!data.list) {\r\n        this.setState({\r\n          temperature: undefined,\r\n          country: undefined,\r\n          city: undefined,\r\n          humidity: undefined,\r\n          description: undefined,\r\n          error:\r\n            \"Unable to get weather info!... Please check the values entered...\",\r\n        });\r\n      } else {\r\n        console.log(data);\r\n        let labels = [];\r\n        let temp_max = [];\r\n        let hum = [];\r\n        let wind_speed = [];\r\n        let dt;\r\n        for (let i = 0; i < data.list.length; i++) {\r\n          dt = data.list[i];\r\n          let date_ = dt.dt_txt.split(\" \")[0];\r\n\r\n          if (\r\n            !labels.includes(date_) &&\r\n            dt.dt_txt.split(\" \")[1] === \"12:00:00\"\r\n          ) {\r\n            // console.log(dt.dt_txt.split(' ')[1]);\r\n            labels.push(date_);\r\n            temp_max.push(dt.main[\"temp_max\"]);\r\n            hum.push(dt.main[\"humidity\"]);\r\n            wind_speed.push(dt.wind[\"speed\"]);\r\n          }\r\n        }\r\n\r\n        if (labels.length !== temp_max.length) {\r\n          labels.shift();\r\n        }\r\n        // console.log(labels);\r\n        // console.log(temp_max);\r\n        // console.log(hum);\r\n        // console.log(wind_speed);\r\n\r\n        this.setState({\r\n          temperature: data.list[0].main.temp,\r\n          country: data.city[\"country\"],\r\n          city: data.city[\"name\"],\r\n          humidity: data.list[0].main.humidity,\r\n          description: data.list[0].weather[0].description,\r\n          error: \"\",\r\n          labels: labels,\r\n          temp_max: temp_max,\r\n          hum: hum,\r\n          wind_speed: wind_speed,\r\n        });\r\n\r\n        console.log(data.city.name);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        temperature: undefined,\r\n        country: undefined,\r\n        city: undefined,\r\n        humidity: undefined,\r\n        description: undefined,\r\n        error: \"Please enter some values!\",\r\n      });\r\n    }\r\n  };\r\n  getForecast = () => {\r\n    this.setState({\r\n      forecast: true,\r\n    });\r\n  };\r\n\r\n  getPresent = () => {\r\n    this.setState({\r\n      forecast: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"wrapper\">\r\n        <Nav />\r\n        <div className=\"col-md-11 pt-4 mx-auto\">\r\n          <div className=\"jumbotron col-lg-10 mx-auto pt-2\">\r\n            <Form className=\"form\" getWeather={this.getWeather} />\r\n            {this.state.loading ? (\r\n              <div className=\"container text-center pt-5 pb-5 mt-5 mb-5\">\r\n                <div className=\"spinner-border text-dark\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : this.state.error ? (\r\n              <Error error={this.state.error} />\r\n            ) : this.state.forecast ? (\r\n              <Chart\r\n                labels={this.state.labels}\r\n                temp_max={this.state.temp_max}\r\n                hum={this.state.hum}\r\n                wind_speed={this.state.wind_speed}\r\n                getPresent={this.getPresent}\r\n              />\r\n            ) : (\r\n              <Weather\r\n                temperature={this.state.temperature}\r\n                country={this.state.country}\r\n                city={this.state.city}\r\n                humidity={this.state.humidity}\r\n                description={this.state.description}\r\n                error={this.state.error}\r\n                getForecast={this.getForecast}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}