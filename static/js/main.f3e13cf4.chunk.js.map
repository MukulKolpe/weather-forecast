{"version":3,"sources":["components/Form/form.js","components/Weather/weather.js","components/Chart/chart.js","components/Error.js","components/Nav/Nav.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onSubmit","this","props","getWeather","className","TextField","id","name","label","variant","color","placeholder","sx","m","type","Component","Weather","city","country","temperature","humidity","description","onClick","getForecast","Chart","data","labels","datasets","queue","backgroundColor","hoverBackgroundColor","borderColor","hoverBorderColor","temp_max","hum","wind_speed","parseInt","window","screen","width","height","options","maintainAspectRatio","duration","getPresent","Error","error","Nav","class","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Footer","target","rel","App","state","undefined","loading","forecast","e","a","preventDefault","elements","value","fetch","then","setState","json","list","console","log","i","length","dt","date_","dt_txt","split","includes","push","main","wind","shift","temp","weather","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3e13cf4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.getWeather}>\r\n        <div className=\"form-inline justify-content-center pl-3 pr-3\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            name=\"country\"\r\n            label=\"country\"\r\n            variant=\"outlined\"\r\n            color=\"success\"\r\n            placeholder=\"Country...\"\r\n            sx={{\r\n              \"& > :not(style)\": { m: 1 },\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            name=\"city\"\r\n            label=\"city\"\r\n            variant=\"outlined\"\r\n            color=\"success\"\r\n            placeholder=\"City...\"\r\n            sx={{\r\n              \"& > :not(style)\": { m: 1 },\r\n            }}\r\n          />\r\n          {/*<input type=\"text\" name=\"country\" className=\"form-control mr-3 mb-3\" placeholder=\"Country...\"/>\r\n                <input type=\"text\" name=\"city\" className=\"form-control mr-3 mb-3\" placeholder=\"City...\"/>*/}\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <button type=\"submit\" className=\"btn btn-dark info mb-3\">\r\n            Get Weather <i className=\"fas fa-arrow-alt-circle-right ml-1\"></i>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Weather extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container pt-2 mt-3 col-lg-8 mx-auto text-center\">\r\n        {this.props.city && this.props.country && <h4>Present Conditions</h4>}\r\n        <table className=\"table pb-3 mb-2\">\r\n          <tbody>\r\n            {this.props.city && this.props.country && (\r\n              <tr>\r\n                <td className=\"text-right mx-auto\">\r\n                  <b>Location:</b>\r\n                </td>\r\n                <td className=\"text-left mx-auto\">\r\n                  {this.props.city}, {this.props.country}\r\n                </td>\r\n              </tr>\r\n            )}\r\n\r\n            {this.props.temperature && (\r\n              <tr>\r\n                <td className=\"text-right\">\r\n                  <b>Temperature:</b>\r\n                </td>\r\n                <td className=\"text-left\">{this.props.temperature}&#8451;</td>\r\n              </tr>\r\n            )}\r\n\r\n            {this.props.humidity && (\r\n              <tr>\r\n                <td className=\"text-right\">\r\n                  <b>Humidity:</b>\r\n                </td>\r\n                <td className=\"text-left\">{this.props.humidity} %</td>\r\n              </tr>\r\n            )}\r\n\r\n            {this.props.description && (\r\n              <tr className=\"mb-5\">\r\n                <td className=\"text-right\">\r\n                  <span className=\"text-bold\">Conditions:</span>\r\n                </td>\r\n                <td className=\"text-left\">{this.props.description}</td>\r\n              </tr>\r\n            )}\r\n\r\n            {/* { this.props.error && \t\t\t\t\t\t\r\n\t\t\t\t    <tr>\r\n\t\t\t\t      \r\n\t\t\t\t      \r\n\t\t\t\t      <td className=\"text-center\">{ this.props.error}</td>\r\n\t\t\t\t      \r\n\t\t\t\t    </tr>\r\n\t\t\t\t    }\t\t */}\r\n          </tbody>\r\n        </table>\r\n        {this.props.city && this.props.country && (\r\n          <div className=\"container text-center\">\r\n            <button className=\"btn btn-dark\" onClick={this.props.getForecast}>\r\n              Forecast Chart<i className=\"fas fa-cloud-sun-rain ml-1\"></i>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nexport default class Chart extends Component {\r\n  render() {\r\n    const data = {\r\n      labels: this.props.labels,\r\n      datasets: [\r\n        {\r\n          queue: \"queue1\",\r\n          label: \"Temperature (\\xB0C)\",\r\n          //\r\n          backgroundColor: \"#FFC1BF\",\r\n          hoverBackgroundColor: \"#F98783\",\r\n          borderColor: \"#FB7671\",\r\n          hoverBorderColor: \"#D73933\",\r\n          data: this.props.temp_max,\r\n        },\r\n        {\r\n          queue: \"queue2\",\r\n          label: \"Humidity (%)\",\r\n          backgroundColor: \"#AAE4FF\",\r\n          hoverBackgroundColor: \"#62CDFF\",\r\n          borderColor: \"#26ADEC\",\r\n          hoverBorderColor: \"#1E86B6\",\r\n          data: this.props.hum,\r\n        },\r\n        {\r\n          queue: \"queue3\",\r\n          label: \"Windspeed (m/s)\",\r\n          backgroundColor: \"#FFFFAE\",\r\n          hoverBackgroundColor: \"#FFFF6F\",\r\n          borderColor: \"#D8D831\",\r\n          hoverBorderColor: \"#D8D831\",\r\n          data: this.props.wind_speed,\r\n        },\r\n      ],\r\n    };\r\n    let w = parseInt(window.screen.width);\r\n    if (w > 1000) {\r\n      return (\r\n        <div>\r\n          <Bar\r\n            data={data}\r\n            width={50}\r\n            height={18}\r\n            options={{\r\n              maintainAspectRatio: true,\r\n              duration: 2000,\r\n            }}\r\n          />\r\n          <div className=\"text-center\">\r\n            <button className=\"btn btn-dark\" onClick={this.props.getPresent}>\r\n              <i className=\"fas fa-angle-left mr-1\"></i>Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Bar\r\n            data={data}\r\n            width={88}\r\n            height={55}\r\n            options={{\r\n              maintainAspectRatio: true,\r\n              duration: 2000,\r\n            }}\r\n          />\r\n          <div className=\"text-center\">\r\n            <button className=\"btn btn-light\" onClick={this.props.getPresent}>\r\n              <i className=\"fas fa-angle-left mr-1\"></i>Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Error extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p className=\"lead\">{this.props.error}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <a\r\n          class=\"navbar-brand\"\r\n          href=\"https://mukulkolpe.github.io/weather-forecast/\"\r\n        >\r\n          Weather Forecast\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div className=\"footer-main\">\r\n        &copy;\r\n        <a\r\n          href=\"https://github.com/MukulKolpe\"\r\n          className=\"footer-link\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Mukul Kolpe\r\n        </a>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport Form from './components/Form/form.js';\r\nimport Weather from \"./components/Weather/weather.js\";\r\nimport Chart from './components/Chart/chart.js';\r\nimport Error from './components/Error.js';\r\nimport Nav from './components/Nav/Nav.js';\r\nimport Footer from './components/Footer/Footer.js';\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  \r\n  state = {\r\n    temperature: undefined,\r\n    country: undefined,\r\n    city: undefined,\r\n    humidity: undefined,\r\n    loading: false,\r\n    description: undefined,\r\n    error: undefined,\r\n    labels: [],\r\n    temp_max: [],\r\n    hum: [],\r\n    wind_speed: [],\r\n    forecast: false\r\n  } \r\n  \r\n    getWeather = async (e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n    const country = e.target.elements.country.value;\r\n    const city = e.target.elements.city.value;\r\n\r\n    const data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=7df7ab233532d23def84f33a98feb94a&units=metric`)\r\n                      .then(this.setState({\r\n                        loading: true\r\n                      }))     \r\n                      .then((data) => {\r\n                        this.setState({\r\n                          loading: false\r\n                        })\r\n                        return data.json();\r\n                      });\r\n    \r\n    //const data = await api_call.json();\r\n  \r\n  \r\n    if(country && city){\r\n        \r\n        if(!data.list){\r\n              this.setState({\r\n\r\n              temperature: undefined,\r\n              country: undefined,\r\n              city: undefined,\r\n              humidity: undefined,\r\n              description: undefined,\r\n              error: \"Unable to get weather info!... Please check the values entered...\"\r\n\r\n              });\r\n\r\n        }else{\r\n            \r\n            console.log(data);\r\n            let labels = [];\r\n            let temp_max = [];\r\n            let hum = [];\r\n            let wind_speed = [];\r\n            let dt; \r\n            for(let i = 0; i<data.list.length; i++){\r\n                dt = data.list[i];\r\n                let date_ = dt.dt_txt.split(' ')[0];\r\n               \r\n                  if(!labels.includes(date_) && dt.dt_txt.split(' ')[1] === '12:00:00'){\r\n                    // console.log(dt.dt_txt.split(' ')[1]);\r\n                    labels.push(date_);\r\n                    temp_max.push(dt.main['temp_max']);\r\n                    hum.push(dt.main['humidity']);\r\n                    wind_speed.push(dt.wind['speed']);\r\n                  }\r\n            } \r\n           \r\n            if(labels.length !== temp_max.length){\r\n              labels.shift();\r\n            }\r\n            // console.log(labels);\r\n            // console.log(temp_max);\r\n            // console.log(hum);\r\n            // console.log(wind_speed);\r\n\r\n              this.setState({\r\n\r\n                  temperature: data.list[0].main.temp,\r\n                  country: data.city['country'],\r\n                  city: data.city['name'],\r\n                  humidity: data.list[0].main.humidity,\r\n                  description: data.list[0].weather[0].description,\r\n                  error: \"\",\r\n                  labels: labels,\r\n                  temp_max: temp_max,\r\n                  hum: hum,\r\n                  wind_speed: wind_speed\r\n              \r\n              });\r\n\r\n              console.log(data.city.name);\r\n\r\n          }\r\n        \r\n  }else{\r\n\r\n      this.setState({\r\n\r\n      temperature: undefined,\r\n      country: undefined,\r\n      city: undefined,\r\n      humidity: undefined,\r\n      description: undefined,\r\n      error: \"Please enter some values!\"\r\n\r\n    });\r\n  \r\n}\r\n}\r\n  getForecast = () => {\r\n    this.setState({\r\n      forecast: true\r\n    });\r\n  }\r\n\r\n  getPresent = () => {\r\n    this.setState({\r\n      forecast: false\r\n    });\r\n  }\r\n\r\n\r\n  render(){\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Nav />\r\n      <div className=\"col-md-11 pt-5 mx-auto\">\r\n        <div className=\"jumbotron col-lg-10 mx-auto pt-2 \">\r\n          \r\n          <Form getWeather={this.getWeather}/>\r\n          {this.state.loading ? \r\n          <div className=\"container text-center pt-5 pb-5 mt-5 mb-5\">\r\n            \r\n            <div className=\"spinner-border text-dark\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...\r\n              </span>\r\n            </div>\r\n          </div> \r\n            : this.state.error ? \r\n              <Error error={this.state.error}/>\r\n              :\r\n              this.state.forecast ? <Chart \r\n                  labels={this.state.labels}\r\n                  temp_max={this.state.temp_max}\r\n                  hum={this.state.hum}\r\n                  wind_speed={this.state.wind_speed}\r\n                  getPresent={this.getPresent}\r\n              /> : <Weather \r\n                  temperature={this.state.temperature}\r\n                  city={this.state.city}\r\n                  country={this.state.country}\r\n                  humidity={this.state.humidity}\r\n                  description={this.state.description}\r\n                  error={this.state.error}\r\n                  getForecast={this.getForecast}\r\n            />}\r\n        </div>\r\n        \r\n      </div>\r\n      <Footer />\r\n    </div>\r\n    \r\n  );\r\n  }\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}